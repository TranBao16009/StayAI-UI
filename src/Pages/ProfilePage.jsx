import { useEffect,useState } from "react";
import { FaBars } from "react-icons/fa";
import { IoMdClose } from "react-icons/io";
import { AiOutlineDashboard, AiOutlineSolution, AiOutlineSetting } from "react-icons/ai";
import SideBar from "../Components/SideBar/SideBar";
import {  Link } from "react-router-dom";

export default function ProfilePage() {
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);
  const [selectedTab, setSelectedTab] = useState("T·ªïng quan");
  const [showTopUpForm, setShowTopUpForm] = useState(false);
  const [amount, setAmount] = useState("");
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("/api/profile")
      .then((res) => res.json())
      .then((data) => {
        setUser(data.user);
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error fetching profile:", err);
        setLoading(false);
      });
  }, []);

  const handleTopUp = async () => {
    try {
      const res = await fetch("/api/topup", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ userId: "admin123", amount: parseInt(amount) })
      });
      const data = await res.json();
      alert(data.message);
      setShowTopUpForm(false);
      setAmount("");
    } catch (err) {
      console.error("L·ªói khi n·∫°p ti·ªÅn:", err);
    }
  };

  return (
    <>
      <SideBar />
      <div className="flex h-screen bg-gray-100">
        <div className={`bg-white p-4 w-64 shadow-lg ${isSidebarOpen ? "block" : "hidden"} md:block`}>
          <div className="flex items-center justify-between border-b pb-4">
            <h2 className="text-xl font-bold">Bao Tran</h2>
            <button onClick={() => setIsSidebarOpen(false)} className="md:hidden">
              <IoMdClose size={20} />
            </button>
          </div>
          <div className="mt-4 bg-gray-50 p-4 rounded-lg shadow-md">
            <h3 className="font-semibold">S·ªë d∆∞ t√†i kho·∫£n</h3>
            <p>TK Ch√≠nh: <span className="font-bold">0</span></p>
            <p>TK Khuy·∫øn m√£i: <span className="font-bold">0</span></p>
            <button
              className="mt-4 bg-teal-600 text-white py-2 px-4 w-full rounded-lg"
              onClick={() => setShowTopUpForm(true)}
            >
              N·∫°p ti·ªÅn
            </button>
          </div>
          <div className="mt-4">
            <ul className="space-y-2">
              {["T·ªïng quan", "Qu·∫£n l√Ω tin ƒëƒÉng", "Ti·ªán √≠ch", "Thay ƒë·ªïi m·∫≠t kh·∫©u", "Thay ƒë·ªïi th√¥ng tin c√° nh√¢n"].map((tab) => (
                <li
                  key={tab}
                  onClick={() => setSelectedTab(tab)}
                  className={`p-2 flex items-center space-x-2 rounded-lg cursor-pointer ${selectedTab === tab ? "bg-gray-200" : "hover:bg-gray-100"}`}
                >
                  {tab === "T·ªïng quan" && <AiOutlineDashboard />}
                  {tab === "Qu·∫£n l√Ω tin ƒëƒÉng" && <AiOutlineSolution />}
                  {tab === "Ti·ªán √≠ch" && <AiOutlineSetting />}
                  {(tab === "Thay ƒë·ªïi m·∫≠t kh·∫©u" || tab === "Thay ƒë·ªïi th√¥ng tin c√° nh√¢n") && <AiOutlineSetting />}
                  <span>{tab}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>

        <div className="flex-1 p-6">
          <button className="md:hidden mb-4" onClick={() => setIsSidebarOpen(true)}>
            <FaBars size={24} />
          </button>
          <h1 className="text-2xl font-bold mb-4">{selectedTab}</h1>

          {selectedTab === "T·ªïng quan" && (
            <div className="grid grid-cols-3 gap-4">
              <div className="p-4 bg-white shadow-md rounded-lg border border-gray-200">
                <h3 className="font-semibold">Tin ƒëƒÉng</h3>
                <p className="text-lg font-bold">0 tin</p>
                <p className="text-sm text-gray-500">ƒêang hi·ªÉn th·ªã</p>
              </div>
              <div className="p-4 bg-white shadow-md rounded-lg border border-gray-200">
                <h3 className="font-semibold">Li√™n h·ªá trong 30 ng√†y</h3>
                <p className="text-lg font-bold">0 ng∆∞·ªùi</p>
                <p className="text-sm text-green-600">+0 m·ªõi v√†o h√¥m nay</p>
              </div>
              <div className="p-4 bg-white shadow-md rounded-lg border border-gray-200">
                <h3 className="font-semibold">S·ªë d∆∞</h3>
                <p className="text-lg font-bold">0 ƒë</p>
                <p className="text-sm text-gray-500">T√†i kho·∫£n ch√≠nh</p>
                <button className="mt-2 text-blue-600" onClick={() => setShowTopUpForm(true)}>N·∫°p ti·ªÅn</button>
              </div>
            </div>
          )}

          {selectedTab === "Qu·∫£n l√Ω tin ƒëƒÉng" && (
            <div className="grid grid-cols-3 gap-4">
              <div className="p-4 bg-white shadow-md rounded-lg border border-gray-200">
                <h3 className="font-semibold">Tin ƒëƒÉng</h3>
                <p className="text-lg font-bold">0 tin</p>
                <p className="text-sm text-gray-500">ƒêang hi·ªÉn th·ªã</p>
                <Link to='/postnew'><button className="mt-2 text-blue-600">ƒêƒÉng tin</button></Link>
              </div>
              <div className="p-4 bg-white shadow-md rounded-lg border border-gray-200">
                <h3 className="font-semibold">Danh s√°ch tin</h3>
                <p className="text-lg font-bold">0 tin</p>
                <p className="text-sm text-green-600">ƒêang hi·ªÉn th·ªã</p>
              </div>
              <div className="p-4 bg-white shadow-md rounded-lg border border-gray-200">
                <h3 className="font-semibold">Tin nh√°p</h3>
                <p className="text-lg font-bold">0 tin</p>
                <p className="text-sm text-gray-500">ƒêang hi·ªÉn th·ªã</p>
              </div>
            </div>
          )}

          {selectedTab === "Ti·ªán √≠ch" && (
            <div className="mt-4 bg-white p-6 rounded-lg shadow-md border border-gray-200">
              <h2 className="text-lg font-semibold">C√°c ti·ªán √≠ch</h2>
              <ul className="mt-2 space-y-2">
                <li className="p-2 bg-gray-100 rounded-lg">üîç C√¥ng c·ª• t√¨m ki·∫øm n√¢ng cao</li>
                <li className="p-2 bg-gray-100 rounded-lg">üìÖ L·ªãch h·∫πn & nh·∫Øc nh·ªü</li>
                <li className="p-2 bg-gray-100 rounded-lg">üìä Ph√¢n t√≠ch d·ªØ li·ªáu</li>
                <li className="p-2 bg-gray-100 rounded-lg">üìå Ghim tin ƒëƒÉng quan tr·ªçng</li>
              </ul>
            </div>
          )}

          {selectedTab === "Thay ƒë·ªïi m·∫≠t kh·∫©u" && (
            <div className="mt-4 bg-white p-6 rounded-lg shadow-md border border-gray-200">
              <h2 className="text-lg font-semibold">Thay ƒë·ªïi m·∫≠t kh·∫©u</h2>
              <form className="mt-4 space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700">M·∫≠t kh·∫©u hi·ªán t·∫°i</label>
                  <input type="password" className="mt-1 block w-full p-2 border border-gray-300 rounded-md" />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700">M·∫≠t kh·∫©u m·ªõi</label>
                  <input type="password" className="mt-1 block w-full p-2 border border-gray-300 rounded-md" />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700">X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi</label>
                  <input type="password" className="mt-1 block w-full p-2 border border-gray-300 rounded-md" />
                </div>
                <button type="submit" className="mt-4 bg-teal-600 text-white py-2 px-4 rounded-lg">L∆∞u thay ƒë·ªïi</button>
              </form>
            </div>
          )}

          {selectedTab === "Thay ƒë·ªïi th√¥ng tin c√° nh√¢n" && (
            <div className="mt-4 bg-white p-6 rounded-lg shadow-md border border-gray-200">
              <h2 className="text-lg font-semibold">Thay ƒë·ªïi th√¥ng tin c√° nh√¢n</h2>
              <form className="mt-4 space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700">H·ªç v√† t√™n</label>
                  <input type="text" className="mt-1 block w-full p-2 border border-gray-300 rounded-md" />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700">Email</label>
                  <input type="email" className="mt-1 block w-full p-2 border border-gray-300 rounded-md" />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700">S·ªë ƒëi·ªán tho·∫°i</label>
                  <input type="text" className="mt-1 block w-full p-2 border border-gray-300 rounded-md" />
                </div>
                <button type="submit" className="mt-4 bg-teal-600 text-white py-2 px-4 rounded-lg">L∆∞u thay ƒë·ªïi</button>
              </form>
            </div>
          )}
        </div>
      </div>

      {showTopUpForm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white p-6 rounded-lg shadow-lg w-96">
            <h2 className="text-xl font-bold mb-4">N·∫°p ti·ªÅn v√†o t√†i kho·∫£n</h2>
            <input
              type="number"
              placeholder="Nh·∫≠p s·ªë ti·ªÅn"
              className="w-full p-2 border border-gray-300 rounded mb-4"
              value={amount}
              onChange={(e) => setAmount(e.target.value)}
            />
            <div className="flex justify-end gap-4">
              <button
                className="bg-gray-400 text-white px-4 py-2 rounded"
                onClick={() => setShowTopUpForm(false)}
              >
                H·ªßy
              </button>
              <button
                className="bg-green-600 text-white px-4 py-2 rounded"
                onClick={handleTopUp}
              >
                X√°c nh·∫≠n
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  );
}